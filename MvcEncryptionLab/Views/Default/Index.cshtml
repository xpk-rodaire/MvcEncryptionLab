@{
    ViewBag.Title = "View";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using RealTimeProgressBar

<h2>Simulated Home Page</h2>

<div>@Html.ActionLink("1) Page With Encrypt/Decrypt Operation", "EncryptOperation", "Default")</div>
<div>@Html.ActionLink("1) Page Without Encrypt/Decrypt Operation", "NoEncryptOperation", "Default")</div>
<br />
<div>@Html.ActionLink("2) Page With Encrypt/Decrypt Operation", "EncryptOperation", "Default2")</div>
<div>@Html.ActionLink("2) Page Without Encrypt/Decrypt Operation", "NoEncryptOperation", "Default2")</div>


@using (Html.BeginForm("RunLongProcess", "Default", FormMethod.Post))
{
    <input type="submit" value="Launch Lengthy Process" />
}

<div class="progress">
    <div class="bar" style="width:0%"></div>
    <span></span>
</div>

@*<div class="progressBar">
    <div id="progressbar" class="progress-bar progress-bar-success progress-bar-striped" role="progressbar"
         aria-valuenow="40" aria-valuemin="0" aria-valuemax="100" style="width:0%">
        <span style="width:100%">Progress!</span>
    </div>
</div>*@

@section Scripts
{
    <script>
        $(function () {
            StartInvoicing();
        });

        function StartInvoicing() {
            var progressNotifier = $.connection.progressHub;

            // client-side sendMessage function that will be called from the server-side
            progressNotifier.client.sendMessage = function (message, count) {
                UpdateProgress(message, count);
            };

            // establish the connection to the server and start server-side operation
            $.connection.hub.start().done(
                function () {
                    // call the method CallLongOperation defined in the Hub
                    progressNotifier.server.getCountAndMessage();
                }
            );
        }

        function UpdateProgress(message, count) {
            $(".bar").css("width", count + "%");
            $(".progress span").text(message);
        }
    </script>
}